# to set up port automatically during the start - set port value as 0
# The recommended port value for gateway is 8765
server.port=8765

# id of eureka client application available on eureka page
spring.application.name=api-gateway

# as it is a client it's settings should be applied by default
#eureka.client.register-with-eureka=false
#eureka.client.fetch-registry=false

# microservices registration URL
# BTW when you copy-paste properties - do it mindfully ${server.port} bleo
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

# I don't think those logs are redundant fo client
#logging.level.com.netflix.eureka=OFF
#logging.level.com.netflix.discovery=OFF

# logs output format
logging.pattern.console=%C{1.} [%-5level] %d{HH:mm:ss} - %msg%n

# gateway settings
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# determine aliases to shorten url path
spring.cloud.gateway.routes[0].id=test
# application name from client service properties; lb means loadBalancer
spring.cloud.gateway.routes[0].uri=lb://eclient
# service full path for redirection
spring.cloud.gateway.routes[0].predicates[0]=Path=/main/test
# what method to redirect
spring.cloud.gateway.routes[0].predicates[1]=Method=GET

spring.cloud.gateway.routes[1].id=name
spring.cloud.gateway.routes[1].uri=lb://eclient2
spring.cloud.gateway.routes[1].predicates[0]=Path=/new/name
spring.cloud.gateway.routes[1].predicates[1]=Method=GET